# File: .github/workflows/docker-deploy.yml
# This would live in a central repository, e.g. "your-org/deployment-workflows"
name: Reusable Docker Build and Deploy

on:
  workflow_call:
    inputs:
      docker_context:
        description: 'Docker build context path'
        required: false
        type: string
        default: '.'
      container_port:
        description: 'Container port to expose'
        required: false
        type: string
        default: '80'
    secrets:
      SSH_PRIVATE_KEY:
        required: true
      SERVER_HOST:
        required: true
      SERVER_USER:
        required: true
      VIRTUAL_HOST:
        required: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=sha,format=long
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.docker_context }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to server
        env:
          HOST: ${{ secrets.SERVER_HOST }}
          USER: ${{ secrets.SERVER_USER }}
          VIRTUAL_HOST: ${{ secrets.VIRTUAL_HOST }}
          LETSENCRYPT_HOST: ${{ secrets.VIRTUAL_HOST }}
          CONTAINER_PORT: ${{ inputs.container_port }}
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H $HOST >> ~/.ssh/known_hosts

          cat > deploy.sh << 'EOF'
          #!/bin/bash
          set -e

          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

          docker pull ${{ steps.meta.outputs.tags }}

          CONTAINER_NAME="${{ github.event.repository.name }}"
          docker rm -f $CONTAINER_NAME || true

          docker run -d \
            --name $CONTAINER_NAME \
            --restart unless-stopped \
            -e VIRTUAL_HOST=$VIRTUAL_HOST \
            -e LETSENCRYPT_HOST=$LETSENCRYPT_HOST \
            -p $CONTAINER_PORT:$CONTAINER_PORT \
            ${{ steps.meta.outputs.tags }}

          docker image prune -f
          EOF

          chmod +x deploy.sh
          scp deploy.sh $USER@$HOST:~/deploy.sh
          ssh $USER@$HOST './deploy.sh'
